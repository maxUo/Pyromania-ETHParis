{
  "contractName": "PyroToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x983b2d56"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x98650275"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaa271e1a"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "root",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xebf0c717"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "furance",
          "type": "address"
        }
      ],
      "name": "AddFurance",
      "type": "event",
      "signature": "0x64adb9d6fb1a45a7c2c549ac58bbb6b484cddcbd5f635c2843ccddc4c29761ca"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event",
      "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event",
      "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "bindRoot",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x91af04e3"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "furance_",
          "type": "address"
        }
      ],
      "name": "addFurance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xee9d8d24"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600981527f5079726f546f6b656e000000000000000000000000000000000000000000000060208083019182528351808501909452600484527f5059524f000000000000000000000000000000000000000000000000000000009084015281519192916012916200009091600391906200027c565b508151620000a69060049060208501906200027c565b506005805460ff191660ff9290921691909117905550620000d2905033640100000000620000ec810204565b620000e6336401000000006200013e810204565b62000321565b6200010760068264010000000062000b3f6200019082021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6200015960068264010000000062000b8d620001eb82021704565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600160a060020a0381161515620001a657600080fd5b620001bb828264010000000062000244810204565b15620001c657600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a03811615156200020157600080fd5b62000216828264010000000062000244810204565b15156200022257600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b6000600160a060020a03821615156200025c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002bf57805160ff1916838001178555620002ef565b82800160010185558215620002ef579182015b82811115620002ef578251825591602001919060010190620002d2565b50620002fd92915062000301565b5090565b6200031e91905b80821115620002fd576000815560010162000308565b90565b610c0580620003316000396000f3fe608060405234801561001057600080fd5b5060043610610133576000357c01000000000000000000000000000000000000000000000000000000009004806395d89b41116100bf578063a9059cbb1161008e578063a9059cbb1461034d578063aa271e1a14610379578063dd62ed3e1461039f578063ebf0c717146103cd578063ee9d8d24146103f157610133565b806395d89b41146102e9578063983b2d56146102f15780639865027514610319578063a457c2d71461032157610133565b8063313ce56711610106578063313ce56714610245578063395093511461026357806340c10f191461028f57806370a08231146102bb57806391af04e3146102e157610133565b806306fdde0314610138578063095ea7b3146101b557806318160ddd146101f557806323b872dd1461020f575b600080fd5b610140610417565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017a578181015183820152602001610162565b50505050905090810190601f1680156101a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e1600480360360408110156101cb57600080fd5b50600160a060020a0381351690602001356104ad565b604080519115158252519081900360200190f35b6101fd61052b565b60408051918252519081900360200190f35b6101e16004803603606081101561022557600080fd5b50600160a060020a03813581169160208101359091169060400135610531565b61024d6105fa565b6040805160ff9092168252519081900360200190f35b6101e16004803603604081101561027957600080fd5b50600160a060020a038135169060200135610603565b6101e1600480360360408110156102a557600080fd5b50600160a060020a0381351690602001356106b3565b6101fd600480360360208110156102d157600080fd5b5035600160a060020a03166106dc565b6101e16106f7565b610140610735565b6103176004803603602081101561030757600080fd5b5035600160a060020a0316610796565b005b6103176107b6565b6101e16004803603604081101561033757600080fd5b50600160a060020a0381351690602001356107c1565b6101e16004803603604081101561036357600080fd5b50600160a060020a03813516906020013561080c565b6101e16004803603602081101561038f57600080fd5b5035600160a060020a0316610819565b6101fd600480360360408110156103b557600080fd5b50600160a060020a0381358116916020013516610832565b6103d561085d565b60408051600160a060020a039092168252519081900360200190f35b6101e16004803603602081101561040757600080fd5b5035600160a060020a031661086c565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b5050505050905090565b6000600160a060020a03831615156104c457600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610565908363ffffffff6108d316565b600160a060020a03851660009081526001602090815260408083203384529091529020556105948484846108e8565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60055460ff1690565b6000600160a060020a038316151561061a57600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461064e908363ffffffff6109b516565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106be33610819565b15156106c957600080fd5b6106d383836109ce565b50600192915050565b600160a060020a031660009081526020819052604090205490565b600754600090600160a060020a03161561071057600080fd5b506007805473ffffffffffffffffffffffffffffffffffffffff191633179055600190565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a35780601f10610478576101008083540402835291602001916104a3565b61079f33610819565b15156107aa57600080fd5b6107b381610a78565b50565b6107bf33610ac0565b565b6000600160a060020a03831615156107d857600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461064e908363ffffffff6108d316565b60006106d33384846108e8565b600061082c60068363ffffffff610b0816565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600754600160a060020a031681565b600754600090600160a060020a0316331461088657600080fd5b61088f82610a78565b60408051600160a060020a038416815290517f64adb9d6fb1a45a7c2c549ac58bbb6b484cddcbd5f635c2843ccddc4c29761ca9181900360200190a1506001919050565b6000828211156108e257600080fd5b50900390565b600160a060020a03821615156108fd57600080fd5b600160a060020a038316600090815260208190526040902054610926908263ffffffff6108d316565b600160a060020a03808516600090815260208190526040808220939093559084168152205461095b908263ffffffff6109b516565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156109c757600080fd5b9392505050565b600160a060020a03821615156109e357600080fd5b6002546109f6908263ffffffff6109b516565b600255600160a060020a038216600090815260208190526040902054610a22908263ffffffff6109b516565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610a8960068263ffffffff610b3f16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610ad160068263ffffffff610b8d16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610b1f57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610b5457600080fd5b610b5e8282610b08565b15610b6857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610ba257600080fd5b610bac8282610b08565b1515610bb757600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058209f71bd7da6f0f06e181bc8583ef2003b93f8d83faabca82a77471ded1f31848a0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610133576000357c01000000000000000000000000000000000000000000000000000000009004806395d89b41116100bf578063a9059cbb1161008e578063a9059cbb1461034d578063aa271e1a14610379578063dd62ed3e1461039f578063ebf0c717146103cd578063ee9d8d24146103f157610133565b806395d89b41146102e9578063983b2d56146102f15780639865027514610319578063a457c2d71461032157610133565b8063313ce56711610106578063313ce56714610245578063395093511461026357806340c10f191461028f57806370a08231146102bb57806391af04e3146102e157610133565b806306fdde0314610138578063095ea7b3146101b557806318160ddd146101f557806323b872dd1461020f575b600080fd5b610140610417565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017a578181015183820152602001610162565b50505050905090810190601f1680156101a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e1600480360360408110156101cb57600080fd5b50600160a060020a0381351690602001356104ad565b604080519115158252519081900360200190f35b6101fd61052b565b60408051918252519081900360200190f35b6101e16004803603606081101561022557600080fd5b50600160a060020a03813581169160208101359091169060400135610531565b61024d6105fa565b6040805160ff9092168252519081900360200190f35b6101e16004803603604081101561027957600080fd5b50600160a060020a038135169060200135610603565b6101e1600480360360408110156102a557600080fd5b50600160a060020a0381351690602001356106b3565b6101fd600480360360208110156102d157600080fd5b5035600160a060020a03166106dc565b6101e16106f7565b610140610735565b6103176004803603602081101561030757600080fd5b5035600160a060020a0316610796565b005b6103176107b6565b6101e16004803603604081101561033757600080fd5b50600160a060020a0381351690602001356107c1565b6101e16004803603604081101561036357600080fd5b50600160a060020a03813516906020013561080c565b6101e16004803603602081101561038f57600080fd5b5035600160a060020a0316610819565b6101fd600480360360408110156103b557600080fd5b50600160a060020a0381358116916020013516610832565b6103d561085d565b60408051600160a060020a039092168252519081900360200190f35b6101e16004803603602081101561040757600080fd5b5035600160a060020a031661086c565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b5050505050905090565b6000600160a060020a03831615156104c457600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610565908363ffffffff6108d316565b600160a060020a03851660009081526001602090815260408083203384529091529020556105948484846108e8565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60055460ff1690565b6000600160a060020a038316151561061a57600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461064e908363ffffffff6109b516565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106be33610819565b15156106c957600080fd5b6106d383836109ce565b50600192915050565b600160a060020a031660009081526020819052604090205490565b600754600090600160a060020a03161561071057600080fd5b506007805473ffffffffffffffffffffffffffffffffffffffff191633179055600190565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a35780601f10610478576101008083540402835291602001916104a3565b61079f33610819565b15156107aa57600080fd5b6107b381610a78565b50565b6107bf33610ac0565b565b6000600160a060020a03831615156107d857600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461064e908363ffffffff6108d316565b60006106d33384846108e8565b600061082c60068363ffffffff610b0816565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600754600160a060020a031681565b600754600090600160a060020a0316331461088657600080fd5b61088f82610a78565b60408051600160a060020a038416815290517f64adb9d6fb1a45a7c2c549ac58bbb6b484cddcbd5f635c2843ccddc4c29761ca9181900360200190a1506001919050565b6000828211156108e257600080fd5b50900390565b600160a060020a03821615156108fd57600080fd5b600160a060020a038316600090815260208190526040902054610926908263ffffffff6108d316565b600160a060020a03808516600090815260208190526040808220939093559084168152205461095b908263ffffffff6109b516565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156109c757600080fd5b9392505050565b600160a060020a03821615156109e357600080fd5b6002546109f6908263ffffffff6109b516565b600255600160a060020a038216600090815260208190526040902054610a22908263ffffffff6109b516565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610a8960068263ffffffff610b3f16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610ad160068263ffffffff610b8d16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610b1f57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610b5457600080fd5b610b5e8282610b08565b15610b6857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610ba257600080fd5b610bac8282610b08565b1515610bb757600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058209f71bd7da6f0f06e181bc8583ef2003b93f8d83faabca82a77471ded1f31848a0029",
  "sourceMap": "269:574:3:-;;;399:98;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;405:163:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:12;;405:163;;;448:2:3;;493:12:10;;:5;;405:163;493:12;:::i;:::-;-1:-1:-1;515:16:10;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:10;:20;;-1:-1:-1;;541:20:10;;;;;;;;;;;;-1:-1:-1;275:22:6;;-1:-1:-1;286:10:6;275;;;;:22;:::i;:::-;466:25:3;480:10;466:13;;;;:25;:::i;:::-;269:574;;685:119:6;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:6;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:15;;;;;;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:6;;;;;;;;810:127;:::o;259:181:5:-;-1:-1:-1;;;;;335:21:5;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:5;;;;585:30;;;;;;633:18;637:4;643:7;633:3;;;;:18;:::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:5;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:5;;;514:184::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:5;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;269:574:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:574:3;;;-1:-1:-1;269:574:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "269:574:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;269:574:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89;;;:::i;:::-;;;;;;;;;;;;;;;;3436:294;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3436:294:9;;;;;;;;;;;;;;;;;:::i;930:81:10:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4233:317:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:9;;;;;;;;:::i;443:128:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:11;;;;;;;;:::i;1234:104:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:9;-1:-1:-1;;;;;1234:104:9;;:::i;503:135:3:-;;;:::i;771:85:10:-;;;:::i;508:90:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:6;-1:-1:-1;;;;;508:90:6;;:::i;:::-;;604:75;;;:::i;5058:327:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:9;;;;;;;;:::i;1962:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1962:137:9;;;;;;;;:::i;395:107:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:6;-1:-1:-1;;;;;395:107:6;;:::i;1669:129:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:9;;;;;;;;;;:::i;372:17:3:-;;;:::i;:::-;;;;-1:-1:-1;;;;;372:17:3;;;;;;;;;;;;;;644:188;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;644:188:3;-1:-1:-1;;;;;644:188:3;;:::i;628:81:10:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:9:-;2800:4;-1:-1:-1;;;;;2824:21:9;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:9;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:9;2735:238;;;;:::o;936:89::-;1006:12;;936:89;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:9;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:9;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:9;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:9;3436:294;;;;;:::o;930:81:10:-;995:9;;;;930:81;:::o;4233:317:9:-;4313:4;-1:-1:-1;;;;;4337:21:9;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:9;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:9;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:9;4233:317;;;;:::o;443:128:11:-;511:4;350:20:6;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:11;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:11;443:128;;;;:::o;1234:104:9:-;-1:-1:-1;;;;;1315:16:9;1289:7;1315:16;;;;;;;;;;;;1234:104::o;503:135:3:-;567:4;;538;;-1:-1:-1;;;;;567:4:3;559:25;551:34;;;;;;-1:-1:-1;592:4:3;:22;;-1:-1:-1;;592:22:3;603:10;592:22;;;;503:135;:::o;771:85:10:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:6;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5058:327:9:-;5143:4;-1:-1:-1;;;;;5167:21:9;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:9;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;395:107:6:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:6:o;1669:129:9:-;-1:-1:-1;;;;;1767:15:9;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;372:17:3:-;;;-1:-1:-1;;;;;372:17:3;;:::o;644:188::-;740:4;;697;;-1:-1:-1;;;;;740:4:3;718:10;:27;710:36;;;;;;753:20;764:8;753:10;:20::i;:::-;785;;;-1:-1:-1;;;;;785:20:3;;;;;;;;;;;;;;;-1:-1:-1;819:4:3;644:188;;;:::o;1205:145:7:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:7;;;1205:145::o;5599:256:9:-;-1:-1:-1;;;;;5686:16:9;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:9;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:9;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:9;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;1431:145:7:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:7:o;6198:263:9:-;-1:-1:-1;;;;;6272:21:9;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:9;;:9;:18;;;;;;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:9;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;685:119:6:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:6;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:6;;;;;;;;810:127;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:5;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:5;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:5;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:5;;;514:184::o",
  "source": "pragma solidity >=0.5.2;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\r\n\r\n\r\ninterface IRoot {\r\n}\r\n\r\n\r\ncontract PyroToken is ERC20, ERC20Detailed, ERC20Mintable {\r\n  event AddFurance(address furance);\r\n\r\n  IRoot public root;\r\n \r\n\r\n  constructor() ERC20Detailed(\"PyroToken\", \"PYRO\", 18) public {\r\n    _removeMinter(msg.sender);\r\n  }\r\n\r\n  function bindRoot() public returns(bool) {\r\n    require(address(root)==address(0));\r\n    root=IRoot(msg.sender);\r\n    return true;\r\n  }\r\n\r\n  function addFurance(address furance_) public returns(bool) {\r\n    require(msg.sender == address(root));\r\n    _addMinter(furance_);\r\n    emit AddFurance(furance_);\r\n    return true;   \r\n  }\r\n\r\n\r\n\r\n\r\n}",
  "sourcePath": "C:/Users/snjax/Documents/projects/mixed/ethparis/pyrotoken/smart_contracts/contracts/PyroToken.sol",
  "ast": {
    "absolutePath": "/C/Users/snjax/Documents/projects/mixed/ethparis/pyrotoken/smart_contracts/contracts/PyroToken.sol",
    "exportedSymbols": {
      "IRoot": [
        631
      ],
      "PyroToken": [
        710
      ]
    },
    "id": 711,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 627,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 628,
        "nodeType": "ImportDirective",
        "scope": 711,
        "sourceUnit": 1734,
        "src": "28:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 629,
        "nodeType": "ImportDirective",
        "scope": 711,
        "sourceUnit": 1792,
        "src": "93:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 630,
        "nodeType": "ImportDirective",
        "scope": 711,
        "sourceUnit": 1820,
        "src": "166:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": true,
        "id": 631,
        "linearizedBaseContracts": [
          631
        ],
        "name": "IRoot",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 711,
        "src": "243:20:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 632,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1733,
              "src": "291:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1733",
                "typeString": "contract ERC20"
              }
            },
            "id": 633,
            "nodeType": "InheritanceSpecifier",
            "src": "291:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 634,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1791,
              "src": "298:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1791",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 635,
            "nodeType": "InheritanceSpecifier",
            "src": "298:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 636,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1819,
              "src": "313:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$1819",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 637,
            "nodeType": "InheritanceSpecifier",
            "src": "313:13:3"
          }
        ],
        "contractDependencies": [
          1064,
          1733,
          1791,
          1819,
          1888
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 710,
        "linearizedBaseContracts": [
          710,
          1819,
          1064,
          1791,
          1733,
          1888
        ],
        "name": "PyroToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 641,
            "name": "AddFurance",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "indexed": false,
                  "name": "furance",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "349:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:17:3"
            },
            "src": "332:34:3"
          },
          {
            "constant": false,
            "id": 643,
            "name": "root",
            "nodeType": "VariableDeclaration",
            "scope": 710,
            "src": "372:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRoot_$631",
              "typeString": "contract IRoot"
            },
            "typeName": {
              "contractScope": null,
              "id": 642,
              "name": "IRoot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 631,
              "src": "372:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRoot_$631",
                "typeString": "contract IRoot"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "459:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 652,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1903,
                          "src": "480:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "480:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 651,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1063,
                      "src": "466:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "466:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "466:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 657,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5079726f546f6b656e",
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "427:11:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_739599e48e2dc4e42cd72840c9aff09ad71c3a6ffd3f54e209723b0dbcca817c",
                      "typeString": "literal_string \"PyroToken\""
                    },
                    "value": "PyroToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5059524f",
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "440:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_86a0fb2383e0f5e18f6088cbe2281ab79db3be48f0586806798fe737876dd260",
                      "typeString": "literal_string \"PYRO\""
                    },
                    "value": "PYRO"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "448:2:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 649,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 645,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1791,
                  "src": "413:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1791_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "413:38:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:2:3"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:3"
            },
            "scope": 710,
            "src": "399:98:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 681,
              "nodeType": "Block",
              "src": "544:94:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 664,
                              "name": "root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "567:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRoot_$631",
                                "typeString": "contract IRoot"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRoot_$631",
                                "typeString": "contract IRoot"
                              }
                            ],
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "559:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "559:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "582:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "574:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "574:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "559:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1906,
                        1907
                      ],
                      "referencedDeclaration": 1906,
                      "src": "551:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "551:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "551:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 672,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "592:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRoot_$631",
                        "typeString": "contract IRoot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 674,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1903,
                            "src": "603:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "603:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 673,
                        "name": "IRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "597:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRoot_$631_$",
                          "typeString": "type(contract IRoot)"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "597:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRoot_$631",
                        "typeString": "contract IRoot"
                      }
                    },
                    "src": "592:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRoot_$631",
                      "typeString": "contract IRoot"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "592:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "628:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 661,
                  "id": 680,
                  "nodeType": "Return",
                  "src": "621:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bindRoot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:2:3"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "538:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:6:3"
            },
            "scope": 710,
            "src": "503:135:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "703:129:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1903,
                            "src": "718:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "718:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 693,
                              "name": "root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "740:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRoot_$631",
                                "typeString": "contract IRoot"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRoot_$631",
                                "typeString": "contract IRoot"
                              }
                            ],
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "732:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "732:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "718:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1906,
                        1907
                      ],
                      "referencedDeclaration": 1906,
                      "src": "710:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "710:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "710:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "furance_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "764:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 698,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "753:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "753:20:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 703,
                        "name": "furance_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "796:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 702,
                      "name": "AddFurance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "785:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "EmitStatement",
                  "src": "780:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "819:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 688,
                  "id": 707,
                  "nodeType": "Return",
                  "src": "812:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addFurance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "name": "furance_",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "664:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "663:18:3"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "697:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "696:6:3"
            },
            "scope": 710,
            "src": "644:188:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 711,
        "src": "269:574:3"
      }
    ],
    "src": "0:843:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/snjax/Documents/projects/mixed/ethparis/pyrotoken/smart_contracts/contracts/PyroToken.sol",
    "exportedSymbols": {
      "IRoot": [
        631
      ],
      "PyroToken": [
        710
      ]
    },
    "id": 711,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 627,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 628,
        "nodeType": "ImportDirective",
        "scope": 711,
        "sourceUnit": 1734,
        "src": "28:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 629,
        "nodeType": "ImportDirective",
        "scope": 711,
        "sourceUnit": 1792,
        "src": "93:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 630,
        "nodeType": "ImportDirective",
        "scope": 711,
        "sourceUnit": 1820,
        "src": "166:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": true,
        "id": 631,
        "linearizedBaseContracts": [
          631
        ],
        "name": "IRoot",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 711,
        "src": "243:20:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 632,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1733,
              "src": "291:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1733",
                "typeString": "contract ERC20"
              }
            },
            "id": 633,
            "nodeType": "InheritanceSpecifier",
            "src": "291:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 634,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1791,
              "src": "298:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1791",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 635,
            "nodeType": "InheritanceSpecifier",
            "src": "298:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 636,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1819,
              "src": "313:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$1819",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 637,
            "nodeType": "InheritanceSpecifier",
            "src": "313:13:3"
          }
        ],
        "contractDependencies": [
          1064,
          1733,
          1791,
          1819,
          1888
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 710,
        "linearizedBaseContracts": [
          710,
          1819,
          1064,
          1791,
          1733,
          1888
        ],
        "name": "PyroToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 641,
            "name": "AddFurance",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "indexed": false,
                  "name": "furance",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "349:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:17:3"
            },
            "src": "332:34:3"
          },
          {
            "constant": false,
            "id": 643,
            "name": "root",
            "nodeType": "VariableDeclaration",
            "scope": 710,
            "src": "372:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRoot_$631",
              "typeString": "contract IRoot"
            },
            "typeName": {
              "contractScope": null,
              "id": 642,
              "name": "IRoot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 631,
              "src": "372:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRoot_$631",
                "typeString": "contract IRoot"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "459:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 652,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1903,
                          "src": "480:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "480:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 651,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1063,
                      "src": "466:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "466:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "466:25:3"
                }
              ]
            },
            "documentation": null,
            "id": 657,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5079726f546f6b656e",
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "427:11:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_739599e48e2dc4e42cd72840c9aff09ad71c3a6ffd3f54e209723b0dbcca817c",
                      "typeString": "literal_string \"PyroToken\""
                    },
                    "value": "PyroToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5059524f",
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "440:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_86a0fb2383e0f5e18f6088cbe2281ab79db3be48f0586806798fe737876dd260",
                      "typeString": "literal_string \"PYRO\""
                    },
                    "value": "PYRO"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "448:2:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 649,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 645,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1791,
                  "src": "413:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1791_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "413:38:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:2:3"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:3"
            },
            "scope": 710,
            "src": "399:98:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 681,
              "nodeType": "Block",
              "src": "544:94:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 664,
                              "name": "root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "567:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRoot_$631",
                                "typeString": "contract IRoot"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRoot_$631",
                                "typeString": "contract IRoot"
                              }
                            ],
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "559:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "559:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "582:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "574:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "574:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "559:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1906,
                        1907
                      ],
                      "referencedDeclaration": 1906,
                      "src": "551:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "551:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "551:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 672,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "592:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRoot_$631",
                        "typeString": "contract IRoot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 674,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1903,
                            "src": "603:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "603:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 673,
                        "name": "IRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "597:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRoot_$631_$",
                          "typeString": "type(contract IRoot)"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "597:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRoot_$631",
                        "typeString": "contract IRoot"
                      }
                    },
                    "src": "592:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRoot_$631",
                      "typeString": "contract IRoot"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "592:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "628:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 661,
                  "id": 680,
                  "nodeType": "Return",
                  "src": "621:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bindRoot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:2:3"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "538:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:6:3"
            },
            "scope": 710,
            "src": "503:135:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "703:129:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1903,
                            "src": "718:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "718:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 693,
                              "name": "root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "740:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRoot_$631",
                                "typeString": "contract IRoot"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRoot_$631",
                                "typeString": "contract IRoot"
                              }
                            ],
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "732:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "732:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "718:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1906,
                        1907
                      ],
                      "referencedDeclaration": 1906,
                      "src": "710:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "710:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "710:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "furance_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "764:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 698,
                      "name": "_addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "753:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "753:20:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 703,
                        "name": "furance_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "796:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 702,
                      "name": "AddFurance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "785:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "EmitStatement",
                  "src": "780:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "819:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 688,
                  "id": 707,
                  "nodeType": "Return",
                  "src": "812:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addFurance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "name": "furance_",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "664:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "663:18:3"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "697:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "696:6:3"
            },
            "scope": 710,
            "src": "644:188:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 711,
        "src": "269:574:3"
      }
    ],
    "src": "0:843:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "1552086447832": {
      "events": {
        "0x64adb9d6fb1a45a7c2c549ac58bbb6b484cddcbd5f635c2843ccddc4c29761ca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "furance",
              "type": "address"
            }
          ],
          "name": "AddFurance",
          "type": "event",
          "signature": "0x64adb9d6fb1a45a7c2c549ac58bbb6b484cddcbd5f635c2843ccddc4c29761ca"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0xd2b5955B23FB0649567FFdA1259aD3E37d638D40",
      "transactionHash": "0xc03a100cd77ec82fdb07707f2ed2b1b770a9147f8f0afb320f570d098171d6ef"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-08T23:57:32.248Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}